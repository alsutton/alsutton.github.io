<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>android development on Al Sutton&#39;s Blog</title>
    <link>/tags/android-development/</link>
    <description>Recent content in android development on Al Sutton&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Thu, 30 Dec 2010 14:02:00 +0000</lastBuildDate><atom:link href="/tags/android-development/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Multi-Core Android 101</title>
      <link>/post/multi-core-android-101/</link>
      <pubDate>Thu, 30 Dec 2010 14:02:00 +0000</pubDate>
      
      <guid>/post/multi-core-android-101/</guid>
      <description>Some of you may already be familiar with multi-core programming, so a lot of what I&amp;rsquo;m going to cover will be very familiar to you, but some Android developers may have never written for (or considered) how the multiple CPU cores available on CPUs such as Nvidias Tegra 2 chips (as rumoured to be in the Motorola Honeycomb Tablet) can improve the speed of their applications if the applications are written in a multi-core friendly manner.</description>
    </item>
    
    <item>
      <title>Android screen densities; what you see may not be what you get.</title>
      <link>/post/android-screen-densities-what-you-see-may-not-be-what-you-get/</link>
      <pubDate>Mon, 13 Sep 2010 18:37:38 +0000</pubDate>
      
      <guid>/post/android-screen-densities-what-you-see-may-not-be-what-you-get/</guid>
      <description>Since Android 1.6 Google have beenasking developers to use specific size and density groupings for their graphical resources to ensure that their user interfaces looked good on a range of devices, but unfortunately developers are not fully supporting it and now OEMs are making their devices report the wrong densities.
I&amp;rsquo;ve blogged before about developers not supporting the various sizes and densities fully which resulted in UIs which look odd and empty on tablets, but OEMs reporting the wrong densities seems to be a new phenomenon which means even if a developer provided graphic assets for all the screen sizes and densities Android supports they may still see the wrong assets being used and their UI looking odd on some devices through no fault of their own.</description>
    </item>
    
    <item>
      <title>Android, tablets, and mdpi-large</title>
      <link>/post/android-tablets-and-mdpi-large/</link>
      <pubDate>Sat, 03 Jul 2010 15:20:31 +0000</pubDate>
      
      <guid>/post/android-tablets-and-mdpi-large/</guid>
      <description>When the Dell Streak was first launched there was an aspect of it that caught me off guard, its&#39; pixel density, and it would appear I&amp;rsquo;m not alone.
Before the Streak developers could pretty much assume that if their app was installed via Google Market any device which reported itself as having low density display (ldpi) had a QVGA screen, any device with a medium density (mdpi) screen had a HVGA screen, and any device with a high density (hdpi) screen had a WVGA screen, and that seemed to work pretty well.</description>
    </item>
    
  </channel>
</rss>
