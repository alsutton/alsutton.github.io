<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Android on </title>
    <link>/categories/Android/</link>
    <description>Recent content in Android on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Fri, 07 Sep 2012 08:34:07 +0000</lastBuildDate><atom:link href="/categories/Android/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Android Tablets</title>
      <link>/post/android-tablets/</link>
      <pubDate>Fri, 07 Sep 2012 08:34:07 +0000</pubDate>
      
      <guid>/post/android-tablets/</guid>
      <description>One phrase from last nights +Amazon.com Kindle launch makes me think they&amp;rsquo;re going to take over the #Android tablet space and have big consumer support;
&amp;ldquo;&amp;hellip;people don&amp;rsquo;t want gadgets anymore. They want services that improve over time. They want services that improve every day, every week, and every month.&amp;rdquo;
This has been true for a long time. Consumers buy devices from washing machines to TVs because they want it to do something, not because it has the lastest bit of technology from the manufacturer.</description>
    </item>
    
    <item>
      <title>Compiling Ice Cream Sandwich on Mac OS X Lion with Xcode 4</title>
      <link>/post/compiling-ice-cream-sandwich-on-mac-os-x-lion-with-xcode-4/</link>
      <pubDate>Wed, 21 Dec 2011 12:59:01 +0000</pubDate>
      
      <guid>/post/compiling-ice-cream-sandwich-on-mac-os-x-lion-with-xcode-4/</guid>
      <description>After making yesterdays post on how to build the Android Open Source Project master branch using Mac OS X 10.7 and Xcode 4 I&amp;rsquo;ve tracked down what&amp;rsquo;s necessary to get the Ice Cream Sandwich branch of AOSP compiling on the same platform.
This process has been tested against the android-4.0.3_r1 branch, so if you&amp;rsquo;re using another branch you may encounter some issues not mentioned here.
  Follow steps 1 to 4 from the instructions from yesterdays post, but check out the relevant ICS branch instead of master (Don&amp;rsquo;t forget to apply the patches from that post to the checked out ICS files).</description>
    </item>
    
    <item>
      <title>Compiling Android master on Mac OS X Lion with Xcode 4</title>
      <link>/post/compiling-android-master-on-mac-os-x-lion-with-xcode-4/</link>
      <pubDate>Tue, 20 Dec 2011 14:22:03 +0000</pubDate>
      
      <guid>/post/compiling-android-master-on-mac-os-x-lion-with-xcode-4/</guid>
      <description>[Update: The patches have been merged into the AOSP master branch, so as of the 22nd of December AOSP master should compile on OS X 10.7 with Xcode 4 straight from checkout]
My company has worked on some Android firmware projects in the past, but, due to the closed source nature of Honeycomb, that work pretty much dried up. Recently though Google released Android 4.0 to the masses and we&amp;rsquo;ve had a few enquiries about firmware work again, so I thought I&amp;rsquo;d see what the current state of building Android was for our default machine configuration.</description>
    </item>
    
    <item>
      <title>HTTP MultiPart on Android</title>
      <link>/post/http-multipart-on-android/</link>
      <pubDate>Tue, 20 Sep 2011 09:07:34 +0000</pubDate>
      
      <guid>/post/http-multipart-on-android/</guid>
      <description>After seeing a twitter post asking about HTTP MultiPart on Android which linked to a Google Groups thread which recommended a solution which required the inclusion of multiple libraries, I thought it might be worth sharing a method I&amp;rsquo;ve used in the past which can be used reasonably easily and doesn&amp;rsquo;t require tens of kilobytes of unused library functions to be added to your app.
First off you&amp;rsquo;ll need the AOSP source which can be obtained from an unofficial mirror in the absence of the primary official repository at kernel.</description>
    </item>
    
    <item>
      <title>Droidcon UK approaching...</title>
      <link>/post/droidcon-uk-approaching/</link>
      <pubDate>Wed, 07 Sep 2011 10:56:20 +0000</pubDate>
      
      <guid>/post/droidcon-uk-approaching/</guid>
      <description>It&amp;rsquo;s coming to that time of year again when one of the main Android events comes around - Droidcon UK
Last year I spoke about taking Android beyond &amp;lsquo;phones, this year I&amp;rsquo;ll be speaking about developing apps which scale well on single and multi-core devices (from single core, to dual, to quad, and beyond), which is something that&amp;rsquo;s going to become more and more important as we see more low-end single core devices, mid/high-end dual core, and top-end quad core devices come to market.</description>
    </item>
    
    <item>
      <title>Why I recommended an iPhone</title>
      <link>/post/why-i-recommended-an-iphone/</link>
      <pubDate>Thu, 25 Aug 2011 06:30:14 +0000</pubDate>
      
      <guid>/post/why-i-recommended-an-iphone/</guid>
      <description>Why I recommended an iPhone I&amp;rsquo;m disheartened to admit that I&amp;rsquo;ve just had to recommend a current iPhone user upgrades to another iPhone instead of switching to Android.
Reasons high-level reasons were;
  They already know iOS, so little to no learning curve.
  They&amp;rsquo;re a power user, not a &amp;ldquo;geek&amp;rdquo;, so availability of apps &amp;amp; media is probably more important than customisation. (There is no equivalent to iTunes for obtaining Movies, TV shows, and Music in one place on Android outside the US, and many main stream apps appear as iOS first releases in the UK)</description>
    </item>
    
    <item>
      <title>Google/Motorola Deal opinion</title>
      <link>/post/googlemotorola-deal-opinion/</link>
      <pubDate>Mon, 15 Aug 2011 06:20:55 +0000</pubDate>
      
      <guid>/post/googlemotorola-deal-opinion/</guid>
      <description>[imported from Google+]
I&amp;rsquo;m not convinced of the benefits of the Motorola-Google deal. Patent protection will be good for Android, but it essentially creates a preferred hardware supplier for Android who is US focused. For all that&amp;rsquo;s said, Google management has to report to shareholders who will want to see Google get the most value out of Motorola, and an easy way to do that would be give Motorola an exclusivity period on all future releases of Android.</description>
    </item>
    
    <item>
      <title>Rumoured Android Ice Cream Sandwich Screenshots</title>
      <link>/post/rumoured-android-ice-cream-sandwich-screenshots/</link>
      <pubDate>Fri, 12 Aug 2011 06:17:49 +0000</pubDate>
      
      <guid>/post/rumoured-android-ice-cream-sandwich-screenshots/</guid>
      <description>[Imported from Google+]
I&amp;rsquo;ve seen the rumoured Ice Cream Sandwich leak, couple of things make me suspicious;
  Kernel Version; It&amp;rsquo;s the same as the current Gingerbread AOSP build, and all of the 3 Honeycomb devices I have are based on 2.6.36 kernels, not 2.6.35, so it seems odd to me a later Android version would use an earlier kernel.
  Baseband version; It&amp;rsquo;s the same as the current Gingerbread release.</description>
    </item>
    
    <item>
      <title>New market layout suggestions</title>
      <link>/post/new-market-layout-suggestions/</link>
      <pubDate>Wed, 13 Jul 2011 06:05:29 +0000</pubDate>
      
      <guid>/post/new-market-layout-suggestions/</guid>
      <description>[Imported from Google+]
The new Android Market client recently started to roll out and looks like this;
I can&amp;rsquo;t help feeling the following tweaks to the new non-US Market layout might be useful;
  Change the &amp;ldquo;Staff Choices&amp;rdquo; button to an &amp;ldquo;Apps&amp;rdquo; button
  Put &amp;ldquo;Staff Choices&amp;rdquo; where the current &amp;ldquo;Editors Choice&amp;rdquo; is
  Put the &amp;ldquo;Editors Choice&amp;rdquo; where they Grey featured app block is (Where the pageonce app is in the screenshot), and rename it &amp;ldquo;More Featured Apps.</description>
    </item>
    
    <item>
      <title>(Partial) Android Honeycomb Source Drop?</title>
      <link>/post/android-honeycomb-source-drop/</link>
      <pubDate>Tue, 12 Apr 2011 14:46:26 +0000</pubDate>
      
      <guid>/post/android-honeycomb-source-drop/</guid>
      <description>After checking over the Android Open Source Project repository I noticed an interesting comment in the manifests project;
which made me wonder if some of the Honeycomb source code had been dropped into the AOSP repository, and, well, it looks like it may have done.
[Update : Jean-Baptiste Queru from Google has confirmed there is some Honeycomb goodness in the AOSP repo which comes from the AOSP repos master branch. It&amp;rsquo;s not the &amp;ldquo;full&amp;rdquo; honeycomb, but a snapshot of master that can be used for recreating a Honeycomb build to test any future incompatibilities against]</description>
    </item>
    
    <item>
      <title>[Opinion] Google Hiring Android Developers And The Android Ecosystem</title>
      <link>/post/opinion-google-hiring-android-developers-and-the-android-ecosystem/</link>
      <pubDate>Tue, 01 Feb 2011 07:51:42 +0000</pubDate>
      
      <guid>/post/opinion-google-hiring-android-developers-and-the-android-ecosystem/</guid>
      <description>Yesterday the Wall Street Journal ran a story about Google planning to hire Android application developers which, to me, seems to have the potential to be the worst possible thing they could do to the Android eco-system. I&amp;rsquo;m going to outline the reasons why I hold this view but I&amp;rsquo;m always open to other, well reasoned, points of view.
The reasons I currently have this view are as follows;
1. It does nothing to help non-Google developers who are currently struggling to make a living from developing Android applications.</description>
    </item>
    
    <item>
      <title>The Android Honeycomb Emulator</title>
      <link>/post/the-android-honeycomb-preview-emulator/</link>
      <pubDate>Thu, 27 Jan 2011 09:06:00 +0000</pubDate>
      
      <guid>/post/the-android-honeycomb-preview-emulator/</guid>
      <description>Some people have noticed some niggles with the Android Honeycomb Previewemulator, so I&amp;rsquo;ve put together a few tips which may help improve your experience.
I&amp;rsquo;ll do my best to keep this updated with tips and post hints on my twitter account as I get them.
Things you can do something about
Emulated memory size
By default the Honeycomb AVD is created to emulate 256MB of RAM, my advice is to increase this significantly.</description>
    </item>
    
    <item>
      <title>Amazons Apps Store</title>
      <link>/post/amazons-app-store/</link>
      <pubDate>Wed, 05 Jan 2011 11:52:53 +0000</pubDate>
      
      <guid>/post/amazons-app-store/</guid>
      <description>(This was prompted by a question asked by Reto Meier)
As many of you may know my company built and later sold AndAppStore over the course of two years. During that time we kept an eye on the competition and received feedback from users and developers and got a good idea of what both sides wanted. I commented on Google Market because it was the main distribution channel for developers, but I rarely commented on competitors alternative app stores because each of them has their own business plan and all of the legally operating ones seemed to be doing their best to strike a balance between what they need to survive and what users and developers want.</description>
    </item>
    
    <item>
      <title>Multi-Core Android 101</title>
      <link>/post/multi-core-android-101/</link>
      <pubDate>Thu, 30 Dec 2010 14:02:00 +0000</pubDate>
      
      <guid>/post/multi-core-android-101/</guid>
      <description>Some of you may already be familiar with multi-core programming, so a lot of what I&amp;rsquo;m going to cover will be very familiar to you, but some Android developers may have never written for (or considered) how the multiple CPU cores available on CPUs such as Nvidias Tegra 2 chips (as rumoured to be in the Motorola Honeycomb Tablet) can improve the speed of their applications if the applications are written in a multi-core friendly manner.</description>
    </item>
    
    <item>
      <title>Android Tablet &amp; Phone UIs in one APK [HOW TO]</title>
      <link>/post/android-tablet-phone-uis-in-one-apk-how-to/</link>
      <pubDate>Tue, 07 Dec 2010 12:40:19 +0000</pubDate>
      
      <guid>/post/android-tablet-phone-uis-in-one-apk-how-to/</guid>
      <description>(the code and application links are at the bottom of the article for those who are a bit impatient)
At DroidCon UK this year I presented a talk on why Android developers should be thinking about tablets and I touched upon creating UIs which can adapt to the device they&amp;rsquo;re on. Anyone who attended DroidCon UK has now had plenty of time to get a head start so I&amp;rsquo;m now going to show one method of getting an Android application to adapt itself to present an appropriate UI.</description>
    </item>
    
    <item>
      <title>Android screen densities; what you see may not be what you get.</title>
      <link>/post/android-screen-densities-what-you-see-may-not-be-what-you-get/</link>
      <pubDate>Mon, 13 Sep 2010 18:37:38 +0000</pubDate>
      
      <guid>/post/android-screen-densities-what-you-see-may-not-be-what-you-get/</guid>
      <description>Since Android 1.6 Google have beenasking developers to use specific size and density groupings for their graphical resources to ensure that their user interfaces looked good on a range of devices, but unfortunately developers are not fully supporting it and now OEMs are making their devices report the wrong densities.
I&amp;rsquo;ve blogged before about developers not supporting the various sizes and densities fully which resulted in UIs which look odd and empty on tablets, but OEMs reporting the wrong densities seems to be a new phenomenon which means even if a developer provided graphic assets for all the screen sizes and densities Android supports they may still see the wrong assets being used and their UI looking odd on some devices through no fault of their own.</description>
    </item>
    
    <item>
      <title>Talk on Android Tablets</title>
      <link>/post/talk-on-android-tablets/</link>
      <pubDate>Wed, 08 Sep 2010 10:04:29 +0000</pubDate>
      
      <guid>/post/talk-on-android-tablets/</guid>
      <description>At the end of October I&amp;rsquo;ll be giving a talk on Android Tablets, eReaders, and other devices at droidcon London, so if you&amp;rsquo;ve found my posts on the subject interesting (or if you want to see any of the other speakers who are going to be presenting), the you can register to attend the Droidcon UK website.</description>
    </item>
    
    <item>
      <title>Android Facebook App; now with less tablet love</title>
      <link>/post/android-facebook-app-now-with-less-tablet-love/</link>
      <pubDate>Wed, 04 Aug 2010 07:35:08 +0000</pubDate>
      
      <guid>/post/android-facebook-app-now-with-less-tablet-love/</guid>
      <description>A short while ago I posted about how many Android applications hadn&amp;rsquo;t allowed for tablets by assuming a direct correlation between screen density and screen resolution. I used the Android Facebook application as an example, and as they&amp;rsquo;ve just released an update I thought I should follow up the previous post and look at the changes they&amp;rsquo;ve made. Unfortunately it seems they&amp;rsquo;re heading in the wrong direction.
The biggest backwards step is the removal of landscape mode.</description>
    </item>
    
    <item>
      <title>Stepping back from public Android work</title>
      <link>/post/stepping-back-from-public-android-work/</link>
      <pubDate>Wed, 28 Jul 2010 10:21:28 +0000</pubDate>
      
      <guid>/post/stepping-back-from-public-android-work/</guid>
      <description>Today is a sad day for me as I&amp;rsquo;ve decided to greatly reduce my involvement in the Android community, and I thought it best to explain why rather than leave the rumour mill to run its&#39; course.
For those who don&amp;rsquo;t know my background my involvement with Android started when Dan Morrill demoed Android at the London Google Developer Day in 2008. During his session my brain started ticking and came up with a method of using cryptographic signatures to show approvals and create trust brands so users could tell who thought which apps were &amp;ldquo;safe&amp;rdquo;, I mentioned it to him, he seemed interested, and so I expanded on the idea in a blog post, and from there on I was hooked.</description>
    </item>
    
    <item>
      <title>Community created &#34;work in progress&#34; books; tread carefully</title>
      <link>/post/community-create-books-tread-carefully/</link>
      <pubDate>Tue, 13 Jul 2010 07:59:22 +0000</pubDate>
      
      <guid>/post/community-create-books-tread-carefully/</guid>
      <description>In the last day or two lots of people have helped circulate a link to an O&amp;rsquo;Reilly effort to create a cookbook of community supplied Android examples, which is a noble effort, but there is a big drawback; and that&amp;rsquo;s the potential quality of the information.
Any healthy community tends to be pyramid shaped when it comes to knowledge and experience. At the bottom are the people who are starting out and have little knowledge or experience of the subject matter, and at the top are the people who&amp;rsquo;ve been involved in the area for a (relatively) long time and have studied it in depth.</description>
    </item>
    
    <item>
      <title>Android, tablets, and mdpi-large</title>
      <link>/post/android-tablets-and-mdpi-large/</link>
      <pubDate>Sat, 03 Jul 2010 15:20:31 +0000</pubDate>
      
      <guid>/post/android-tablets-and-mdpi-large/</guid>
      <description>When the Dell Streak was first launched there was an aspect of it that caught me off guard, its&#39; pixel density, and it would appear I&amp;rsquo;m not alone.
Before the Streak developers could pretty much assume that if their app was installed via Google Market any device which reported itself as having low density display (ldpi) had a QVGA screen, any device with a medium density (mdpi) screen had a HVGA screen, and any device with a high density (hdpi) screen had a WVGA screen, and that seemed to work pretty well.</description>
    </item>
    
    <item>
      <title>Building AOSP for the Nexus One</title>
      <link>/post/building-aosp-for-the-nexus-one/</link>
      <pubDate>Tue, 29 Jun 2010 07:16:44 +0000</pubDate>
      
      <guid>/post/building-aosp-for-the-nexus-one/</guid>
      <description>Please Note: Messing around with the firmware and OS on any device can render the device unusable. Please do not attempt to modify your firmware or OS unless you are confident you know what you are doing. I offer no guarantees and do not accept any liability for anything which may go wrong if you follow the information in this post.
Here is my modified version of the instructions from the AOSP page for building for the HTC Dream range of &amp;lsquo;phones to cover the Nexus One Android 2.</description>
    </item>
    
    <item>
      <title>Google, Android, and Private APIs.</title>
      <link>/post/google-android-apps-and-private-apis/</link>
      <pubDate>Fri, 07 May 2010 07:58:45 +0000</pubDate>
      
      <guid>/post/google-android-apps-and-private-apis/</guid>
      <description>[Declaration of interest: My company runs AndAppStore, an alternative to Googles Android Market]
Theres been a fair amount of talk around Googles use of &amp;ldquo;Private APIs&amp;rdquo; in their Android applications since the Andy Rubin interview which appeared in the NY Times Bits blog, and I&amp;rsquo;d like to point out what appears to be a glaring mistake in one of the replies Andy gave.
During the interview he said;
I don&amp;rsquo;t know whether he said this because he doesn&amp;rsquo;t know about what&amp;rsquo;s in some of Googles Android applications, or whether he was towing a party line about Androids&#39; open source nature, but that statement simply isn&amp;rsquo;t true.</description>
    </item>
    
    <item>
      <title>AOSP - in need of love at both ends</title>
      <link>/post/aosp-in-need-of-love-at-both-ends/</link>
      <pubDate>Wed, 10 Mar 2010 17:18:11 +0000</pubDate>
      
      <guid>/post/aosp-in-need-of-love-at-both-ends/</guid>
      <description>After spending some time trying to build a firmware I&amp;rsquo;ve seen some things which have opened my eyes as to why the Android Open Source Project may not be seeing the kind of community contributions that would be expected of such a high profile project.
Other people have shown an interest in knowing my thoughts so I&amp;rsquo;m going to throw out my top 3 for discussion which will hopefully help to improve things;</description>
    </item>
    
    <item>
      <title>Building firmware... not for the infirm...</title>
      <link>/post/building-firmware-not-for-the-infirm/</link>
      <pubDate>Tue, 09 Mar 2010 13:43:49 +0000</pubDate>
      
      <guid>/post/building-firmware-not-for-the-infirm/</guid>
      <description>A project I&amp;rsquo;m working on requires the use of a custom firmware image, so I&amp;rsquo;ve been exposed to the joy that is trying to build and use the open source version of Android, and to be honest it&amp;rsquo;s left me a little battered.
If you&amp;rsquo;re on an ADP1, and you&amp;rsquo;re just looking to build a 1.6 firmware, you&amp;rsquo;re in for a smooth ride. JBQ and his helpers did a fantastic job and created some easy to follow instructions which you can use to build a firmware image from the donut-plus-aosp branch of the central android repository.</description>
    </item>
    
    <item>
      <title>650&#43; Downloads, 300&#43; Active Installs, and 8 Votes of support. Time to suspend development?</title>
      <link>/post/650-downloads-300-active-installs-and-8-votes-of-support-time-to-suspend-development/</link>
      <pubDate>Fri, 26 Feb 2010 13:56:27 +0000</pubDate>
      
      <guid>/post/650-downloads-300-active-installs-and-8-votes-of-support-time-to-suspend-development/</guid>
      <description>[This body of this post was updated on the at 08:45 GMT - 28th Feb 10 with the latest statistics]
When we entered the PayPal X Developers Challenge we hoped for a good result (who doesn&amp;rsquo;t when they enter a competition?). After the problems we saw with the way it&amp;rsquo;s being run we decided to use the number of votes we received to determine what to do with the project in the future.</description>
    </item>
    
    <item>
      <title>Will the Android Market T&amp;Cs kill off &#34;fun&#34; apps?</title>
      <link>/post/will-the-android-market-tcs-kill-off-fun-apps/</link>
      <pubDate>Fri, 13 Feb 2009 16:09:23 +0000</pubDate>
      
      <guid>/post/will-the-android-market-tcs-kill-off-fun-apps/</guid>
      <description>Over recent weeks there has been a lot of speculation over when Android users will be able to buy applications from Googles Market, but some of the terms and conditions in the Developer Distribution Agreement could scare many developers away before they deploy their first application.
The first thing that came to light is that purchasers will have 24 hours in which they can get a refund apparently with no questions asked.</description>
    </item>
    
  </channel>
</rss>
